# generated by datamodel-codegen:
#   filename:  https://github.com/projectnessie/nessie/releases/download/nessie-0.73.0/nessie-openapi-0.73.0.yaml

from __future__ import annotations

from dataclasses import dataclass
from typing import Any, Mapping, Sequence


@dataclass
class Contact:
    name: str
    url: str


@dataclass
class License(Contact):
    pass


@dataclass
class Info:
    title: str
    description: str
    contact: Contact
    license: License
    version: str


@dataclass
class Scheme:
    default: str
    description: str


@dataclass
class Host(Scheme):
    pass


@dataclass
class Port(Scheme):
    pass


@dataclass
class BasePath(Scheme):
    pass


@dataclass
class Variables:
    scheme: Scheme
    host: Host
    port: Port
    base_path: BasePath


@dataclass
class Server:
    url: str
    description: str
    variables: Variables


@dataclass
class Tag:
    name: str
    description: str


@dataclass
class Schema:
    field_ref: str


@dataclass
class NessieConfigV1(Schema):
    pass


@dataclass
class Examples:
    nessie_config_v1: NessieConfigV1


@dataclass
class ApplicationJson:
    schema_: Schema
    examples: Examples


@dataclass
class Content:
    application_json: ApplicationJson


@dataclass
class Default:
    description: str
    content: Content


@dataclass
class Field401:
    description: str


@dataclass
class Field400(Field401):
    pass


@dataclass
class Responses:
    default: Default
    field_401: Field401
    field_400: Field400


@dataclass
class Get:
    tags: Sequence[str]
    summary: str
    operation_id: str
    responses: Responses


@dataclass
class FieldV1Config:
    get: Get


@dataclass
class Schema1:
    type: str


@dataclass
class NullHash(Schema):
    pass


@dataclass
class Hash(Schema):
    pass


@dataclass
class Ref(Schema):
    pass


@dataclass
class Examples1:
    null_hash: NullHash | None = None
    hash: Hash | None = None
    ref: Ref | None = None


@dataclass
class Parameter:
    name: str
    in_: str
    description: str
    schema_: Schema1
    examples: Examples1


@dataclass
class Schema2(Schema):
    pass


@dataclass
class MultiGetRequest(Schema):
    pass


@dataclass
class Examples2:
    multi_get_request: MultiGetRequest


@dataclass
class ApplicationJson1:
    schema_: Schema2
    examples: Examples2


@dataclass
class Content1:
    application_json: ApplicationJson1


@dataclass
class RequestBody:
    description: str
    content: Content1


@dataclass
class MultiGetResponse(Schema):
    pass


@dataclass
class Examples3:
    multi_get_response: MultiGetResponse


@dataclass
class ApplicationJson2:
    schema_: Schema2
    examples: Examples3


@dataclass
class Content2:
    application_json: ApplicationJson2


@dataclass
class Field200:
    description: str
    content: Content2


@dataclass
class Field403(Field401):
    pass


@dataclass
class Field404(Field401):
    pass


@dataclass
class Responses1:
    field_200: Field200
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Post:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter]
    request_body: RequestBody
    responses: Responses1


@dataclass
class FieldV1Contents:
    post: Post


@dataclass
class Schema4(Schema1):
    pass


@dataclass
class ContentKeyGet(Schema):
    pass


@dataclass
class Examples4:
    content_key_get: ContentKeyGet | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None
    ref: Ref | None = None


@dataclass
class Parameter1:
    name: str
    in_: str
    description: str
    schema_: Schema4
    examples: Examples4
    required: bool | None = None


@dataclass
class Schema5(Schema):
    pass


@dataclass
class Iceberg(Schema):
    pass


@dataclass
class Examples5:
    iceberg: Iceberg


@dataclass
class ApplicationJson3:
    schema_: Schema5
    examples: Examples5


@dataclass
class Content3:
    application_json: ApplicationJson3


@dataclass
class Field2001:
    description: str
    content: Content3


@dataclass
class Responses2:
    field_200: Field2001
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get1:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter1]
    responses: Responses2


@dataclass
class FieldV1ContentsKey:
    get: Get1


@dataclass
class Schema6(Schema1):
    pass


@dataclass
class RefForDiffWithHash(Schema):
    pass


@dataclass
class Examples6:
    ref: Ref
    ref_for_diff_with_hash: RefForDiffWithHash


@dataclass
class Parameter2:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema6
    examples: Examples6


@dataclass
class Schema7(Schema):
    pass


@dataclass
class DiffResponse(Schema):
    pass


@dataclass
class Examples7:
    diff_response: DiffResponse


@dataclass
class ApplicationJson4:
    schema_: Schema7
    examples: Examples7


@dataclass
class Content4:
    application_json: ApplicationJson4


@dataclass
class Field2002:
    description: str
    content: Content4


@dataclass
class Responses3:
    field_200: Field2002
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get2:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter2]
    responses: Responses3


@dataclass
class FieldV1DiffsFromRefWithHashToRefWithHash:
    get: Get2


@dataclass
class Schema8:
    field_ref: str | None = None
    pattern: str | None = None
    type: str | None = None


@dataclass
class NamespaceName(Schema):
    pass


@dataclass
class Examples8:
    namespace_name: NamespaceName | None = None
    ref: Ref | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None


@dataclass
class Parameter3:
    name: str
    in_: str
    description: str
    schema_: Schema8
    examples: Examples8
    required: bool | None = None


@dataclass
class Schema9(Schema):
    pass


@dataclass
class Namespace(Schema):
    pass


@dataclass
class Examples9:
    namespace: Namespace


@dataclass
class ApplicationJson5:
    schema_: Schema9
    examples: Examples9


@dataclass
class Content5:
    application_json: ApplicationJson5


@dataclass
class Field2003:
    description: str
    content: Content5


@dataclass
class Responses4:
    field_200: Field2003
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get3:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter3]
    responses: Responses4


@dataclass
class Schema10(Schema8):
    pass


@dataclass
class Examples10(Examples8):
    pass


@dataclass
class Parameter4:
    name: str
    in_: str
    description: str
    schema_: Schema10
    examples: Examples10
    required: bool | None = None


@dataclass
class Schema11(Schema):
    pass


@dataclass
class ApplicationJson6:
    schema_: Schema11


@dataclass
class Content6:
    application_json: ApplicationJson6


@dataclass
class RequestBody1:
    content: Content6


@dataclass
class Examples11(Examples9):
    pass


@dataclass
class ApplicationJson7:
    schema_: Schema11
    examples: Examples11


@dataclass
class Content7:
    application_json: ApplicationJson7


@dataclass
class Field2004:
    description: str
    content: Content7


@dataclass
class Field409(Field401):
    pass


@dataclass
class Responses5:
    field_200: Field2004
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Put:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter4]
    request_body: RequestBody1
    responses: Responses5


@dataclass
class Schema13(Schema8):
    pass


@dataclass
class Examples12(Examples8):
    pass


@dataclass
class Parameter5:
    name: str
    in_: str
    description: str
    schema_: Schema13
    examples: Examples12
    required: bool | None = None


@dataclass
class Schema14(Schema):
    pass


@dataclass
class NamespaceUpdate(Schema):
    pass


@dataclass
class Examples13:
    namespace_update: NamespaceUpdate


@dataclass
class ApplicationJson8:
    schema_: Schema14
    examples: Examples13


@dataclass
class Content8:
    application_json: ApplicationJson8


@dataclass
class RequestBody2:
    description: str
    content: Content8


@dataclass
class Field2005(Field401):
    pass


@dataclass
class Responses6:
    field_200: Field2005
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Post1:
    tags: Sequence[str]
    operation_id: str
    parameters: Sequence[Parameter5]
    request_body: RequestBody2
    responses: Responses6


@dataclass
class Schema15(Schema8):
    pass


@dataclass
class Examples14(Examples8):
    pass


@dataclass
class Parameter6:
    name: str
    in_: str
    description: str
    schema_: Schema15
    examples: Examples14
    required: bool | None = None


@dataclass
class Responses7:
    field_200: Field2005
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Delete:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter6]
    responses: Responses7


@dataclass
class FieldV1NamespacesNamespaceRefName:
    get: Get3
    put: Put
    post: Post1
    delete: Delete


@dataclass
class Schema16:
    pattern: str | None = None
    type: str | None = None
    field_ref: str | None = None


@dataclass
class EmptyNamespaceName(Schema):
    pass


@dataclass
class Examples15:
    ref: Ref | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None
    namespace_name: NamespaceName | None = None
    empty_namespace_name: EmptyNamespaceName | None = None


@dataclass
class Parameter7:
    name: str
    in_: str
    description: str
    schema_: Schema16
    examples: Examples15
    required: bool | None = None


@dataclass
class Schema17(Schema):
    pass


@dataclass
class NamespacesResponse(Schema):
    pass


@dataclass
class Examples16:
    namespaces_response: NamespacesResponse


@dataclass
class ApplicationJson9:
    schema_: Schema17
    examples: Examples16


@dataclass
class Content9:
    application_json: ApplicationJson9


@dataclass
class Field2007:
    description: str
    content: Content9


@dataclass
class Responses8:
    field_200: Field2007
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get4:
    tags: Sequence[str]
    operation_id: str
    parameters: Sequence[Parameter7]
    responses: Responses8


@dataclass
class FieldV1NamespacesRef:
    get: Get4


@dataclass
class Schema18:
    field_ref: str | None = None
    type: str | None = None
    format: str | None = None


@dataclass
class ExprByRefType(Schema):
    pass


@dataclass
class ExprByRefName(Schema):
    pass


@dataclass
class ExprByRefCommit(Schema):
    pass


@dataclass
class Examples17:
    expr_by_ref_type: ExprByRefType
    expr_by_ref_name: ExprByRefName
    expr_by_ref_commit: ExprByRefCommit


@dataclass
class Parameter8:
    name: str
    in_: str
    description: str
    schema_: Schema18
    examples: Examples17 | None = None


@dataclass
class Schema19(Schema):
    pass


@dataclass
class ReferencesResponse(Schema):
    pass


@dataclass
class ReferencesResponseWithMetadata(Schema):
    pass


@dataclass
class Examples18:
    references_response: ReferencesResponse
    references_response_with_metadata: ReferencesResponseWithMetadata


@dataclass
class ApplicationJson10:
    schema_: Schema19
    examples: Examples18


@dataclass
class Content10:
    application_json: ApplicationJson10


@dataclass
class Field2008:
    description: str
    content: Content10


@dataclass
class Responses9:
    field_200: Field2008
    field_401: Field401


@dataclass
class Get5:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter8]
    responses: Responses9


@dataclass
class FieldV1Trees:
    get: Get5


@dataclass
class Schema20(Schema1):
    pass


@dataclass
class Examples19:
    ref: Ref | None = None
    hash: Hash | None = None


@dataclass
class Parameter9:
    name: str
    in_: str
    description: str
    schema_: Schema20
    examples: Examples19
    required: bool | None = None


@dataclass
class Schema21(Schema):
    pass


@dataclass
class Operations(Schema):
    pass


@dataclass
class Examples20:
    operations: Operations


@dataclass
class ApplicationJson11:
    schema_: Schema21
    examples: Examples20


@dataclass
class Content11:
    application_json: ApplicationJson11


@dataclass
class RequestBody3:
    description: str
    content: Content11


@dataclass
class RefObj(Schema):
    pass


@dataclass
class Examples21:
    ref_obj: RefObj


@dataclass
class ApplicationJson12:
    schema_: Schema21
    examples: Examples21


@dataclass
class Content12:
    application_json: ApplicationJson12


@dataclass
class Field2009:
    description: str
    content: Content12


@dataclass
class Responses10:
    field_200: Field2009
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post2:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter9]
    request_body: RequestBody3
    responses: Responses10


@dataclass
class FieldV1TreesBranchBranchNameCommit:
    post: Post2


@dataclass
class Schema23(Schema1):
    pass


@dataclass
class Examples22(Examples19):
    pass


@dataclass
class Parameter10:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema23
    examples: Examples22


@dataclass
class Schema24(Schema):
    pass


@dataclass
class Merge(Schema):
    pass


@dataclass
class Examples23:
    merge: Merge


@dataclass
class ApplicationJson13:
    schema_: Schema24
    examples: Examples23


@dataclass
class Content13:
    application_json: ApplicationJson13


@dataclass
class RequestBody4:
    description: str
    content: Content13


@dataclass
class MergeResponseSuccess(Schema):
    pass


@dataclass
class MergeResponseFail(Schema):
    pass


@dataclass
class Examples24:
    merge_response_success: MergeResponseSuccess
    merge_response_fail: MergeResponseFail


@dataclass
class ApplicationJson14:
    schema_: Schema24
    examples: Examples24


@dataclass
class Content14:
    application_json: ApplicationJson14


@dataclass
class Field204:
    description: str
    content: Content14


@dataclass
class Responses11:
    field_204: Field204
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post3:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter10]
    request_body: RequestBody4
    responses: Responses11


@dataclass
class FieldV1TreesBranchBranchNameMerge:
    post: Post3


@dataclass
class Schema26(Schema1):
    pass


@dataclass
class CommitMessage(Schema):
    pass


@dataclass
class Examples25:
    ref: Ref | None = None
    hash: Hash | None = None
    commit_message: CommitMessage | None = None


@dataclass
class Parameter11:
    name: str
    in_: str
    description: str
    schema_: Schema26
    examples: Examples25
    required: bool | None = None


@dataclass
class Schema27(Schema):
    pass


@dataclass
class Transplant(Schema):
    pass


@dataclass
class Examples26:
    transplant: Transplant


@dataclass
class ApplicationJson15:
    schema_: Schema27
    examples: Examples26


@dataclass
class Content15:
    application_json: ApplicationJson15


@dataclass
class RequestBody5:
    description: str
    content: Content15


@dataclass
class Examples27(Examples24):
    pass


@dataclass
class ApplicationJson16:
    schema_: Schema27
    examples: Examples27


@dataclass
class Content16:
    application_json: ApplicationJson16


@dataclass
class Field2041:
    description: str
    content: Content16


@dataclass
class Responses12:
    field_204: Field2041
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post4:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter11]
    request_body: RequestBody5
    responses: Responses12


@dataclass
class FieldV1TreesBranchBranchNameTransplant:
    post: Post4


@dataclass
class Examples28(Examples21):
    pass


@dataclass
class ApplicationJson17:
    schema_: Schema27
    examples: Examples28


@dataclass
class Content17:
    application_json: ApplicationJson17


@dataclass
class Field20010:
    description: str
    content: Content17


@dataclass
class Responses13:
    field_200: Field20010
    field_401: Field401
    field_404: Field404


@dataclass
class Get6:
    tags: Sequence[str]
    summary: str
    operation_id: str
    responses: Responses13


@dataclass
class Schema30(Schema1):
    pass


@dataclass
class Parameter12:
    name: str
    in_: str
    description: str
    schema_: Schema30


@dataclass
class Schema31(Schema):
    pass


@dataclass
class RefObjNew(Schema):
    pass


@dataclass
class Examples29:
    ref_obj_new: RefObjNew


@dataclass
class ApplicationJson18:
    schema_: Schema31
    examples: Examples29


@dataclass
class Content18:
    application_json: ApplicationJson18


@dataclass
class RequestBody6:
    description: str
    content: Content18


@dataclass
class Examples30(Examples29):
    pass


@dataclass
class ApplicationJson19:
    schema_: Schema31
    examples: Examples30


@dataclass
class Content19:
    application_json: ApplicationJson19


@dataclass
class Field20011:
    description: str
    content: Content19


@dataclass
class Responses14:
    field_200: Field20011
    field_401: Field401
    field_403: Field403
    field_409: Field409


@dataclass
class Post5:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter12]
    request_body: RequestBody6
    responses: Responses14


@dataclass
class FieldV1TreesTree:
    get: Get6
    post: Post5


@dataclass
class Schema33(Schema16):
    pass


@dataclass
class Examples31:
    ref: Ref


@dataclass
class Parameter13:
    name: str
    in_: str
    description: str
    schema_: Schema33
    required: bool | None = None
    examples: Examples31 | None = None


@dataclass
class Schema34(Schema):
    pass


@dataclass
class Examples32(Examples21):
    pass


@dataclass
class ApplicationJson20:
    schema_: Schema34
    examples: Examples32


@dataclass
class Content20:
    application_json: ApplicationJson20


@dataclass
class Field20012:
    description: str
    content: Content20


@dataclass
class Responses15:
    field_200: Field20012
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get7:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter13]
    responses: Responses15


@dataclass
class FieldV1TreesTreeRef:
    get: Get7


@dataclass
class Schema35:
    type: str
    pattern: str | None = None
    format: str | None = None


@dataclass
class ExprByNamespace(Schema):
    pass


@dataclass
class ExprByContentType(Schema):
    pass


@dataclass
class ExprByNamespaceAndContentType(Schema):
    pass


@dataclass
class Examples33:
    ref: Ref | None = None
    expr_by_namespace: ExprByNamespace | None = None
    expr_by_content_type: ExprByContentType | None = None
    expr_by_namespace_and_content_type: ExprByNamespaceAndContentType | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None


@dataclass
class Parameter14:
    name: str
    in_: str
    description: str
    schema_: Schema35
    required: bool | None = None
    examples: Examples33 | None = None


@dataclass
class Schema36(Schema):
    pass


@dataclass
class EntriesResponse(Schema):
    pass


@dataclass
class Examples34:
    entries_response: EntriesResponse


@dataclass
class ApplicationJson21:
    schema_: Schema36
    examples: Examples34


@dataclass
class Content21:
    application_json: ApplicationJson21


@dataclass
class Default1:
    description: str
    content: Content21


@dataclass
class ApplicationJson22:
    schema_: Schema36


@dataclass
class Content22:
    application_json: ApplicationJson22


@dataclass
class Field20013:
    description: str
    content: Content22


@dataclass
class Responses16:
    default: Default1
    field_200: Field20013
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get8:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter14]
    responses: Responses16


@dataclass
class FieldV1TreesTreeRefEntries:
    get: Get8


@dataclass
class Schema38:
    type: str | None = None
    pattern: str | None = None
    field_ref: str | None = None
    format: str | None = None


@dataclass
class ExprByCommitAuthor(Schema):
    pass


@dataclass
class ExprByCommitCommitter(Schema):
    pass


@dataclass
class ExprByCommitTime(Schema):
    pass


@dataclass
class ExprByCommitOperationsTableName(Schema):
    pass


@dataclass
class ExprByCommitOperationsType(Schema):
    pass


@dataclass
class Examples35:
    ref: Ref | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None
    expr_by_commit_author: ExprByCommitAuthor | None = None
    expr_by_commit_committer: ExprByCommitCommitter | None = None
    expr_by_commit_time: ExprByCommitTime | None = None
    expr_by_commit_operations_table_name: ExprByCommitOperationsTableName | None = None
    expr_by_commit_operations_type: ExprByCommitOperationsType | None = None


@dataclass
class Parameter15:
    name: str
    in_: str
    description: str
    schema_: Schema38
    required: bool | None = None
    examples: Examples35 | None = None


@dataclass
class Schema39(Schema):
    pass


@dataclass
class LogResponseAdditionalInfo(Schema):
    pass


@dataclass
class LogResponseSimple(Schema):
    pass


@dataclass
class Examples36:
    log_response_additional_info: LogResponseAdditionalInfo
    log_response_simple: LogResponseSimple


@dataclass
class ApplicationJson23:
    schema_: Schema39
    examples: Examples36


@dataclass
class Content23:
    application_json: ApplicationJson23


@dataclass
class Field20014:
    description: str
    content: Content23


@dataclass
class Responses17:
    field_200: Field20014
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get9:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter15]
    responses: Responses17


@dataclass
class FieldV1TreesTreeRefLog:
    get: Get9


@dataclass
class Schema40:
    type: str | None = None
    field_ref: str | None = None


@dataclass
class ReferenceType(Schema):
    pass


@dataclass
class Examples37:
    ref: Ref | None = None
    reference_type: ReferenceType | None = None
    hash: Hash | None = None


@dataclass
class Parameter16:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema40
    examples: Examples37


@dataclass
class Schema41(Schema):
    pass


@dataclass
class TagObj(Schema):
    pass


@dataclass
class Examples38:
    ref_obj: RefObj
    tag_obj: TagObj


@dataclass
class ApplicationJson24:
    schema_: Schema41
    examples: Examples38


@dataclass
class Content24:
    application_json: ApplicationJson24


@dataclass
class RequestBody7:
    description: str
    content: Content24


@dataclass
class Field2042(Field401):
    pass


@dataclass
class Responses18:
    field_204: Field2042
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Put1:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter16]
    request_body: RequestBody7
    responses: Responses18


@dataclass
class Schema42(Schema40):
    pass


@dataclass
class Examples39(Examples37):
    pass


@dataclass
class Parameter17:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema42
    examples: Examples39


@dataclass
class Responses19(Responses18):
    pass


@dataclass
class Delete1:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter17]
    responses: Responses19


@dataclass
class FieldV1TreesReferenceTypeReferenceName:
    put: Put1
    delete: Delete1


@dataclass
class Schema43(Schema):
    pass


@dataclass
class NessieConfig(Schema):
    pass


@dataclass
class Examples40:
    nessie_config: NessieConfig


@dataclass
class ApplicationJson25:
    schema_: Schema43
    examples: Examples40


@dataclass
class Content25:
    application_json: ApplicationJson25


@dataclass
class Field20015:
    description: str
    content: Content25


@dataclass
class Responses20:
    field_200: Field20015
    field_401: Field401


@dataclass
class Get10:
    tags: Sequence[str]
    summary: str
    operation_id: str
    responses: Responses20


@dataclass
class FieldV2Config:
    get: Get10


@dataclass
class Items(Schema1):
    pass


@dataclass
class Schema44:
    type: str
    items: Items


@dataclass
class Parameter18:
    name: str
    in_: str
    schema_: Schema44


@dataclass
class Items1(Schema):
    pass


@dataclass
class Configs:
    title: str
    description: str
    type: str
    items: Items1


@dataclass
class Properties:
    configs: Configs


@dataclass
class Schema45:
    title: str
    description: str
    type: str
    properties: Properties


@dataclass
class ApplicationJson26:
    schema_: Schema45


@dataclass
class Content26:
    application_json: ApplicationJson26


@dataclass
class Field20016:
    description: str
    content: Content26


@dataclass
class Responses21:
    field_200: Field20016
    field_401: Field401


@dataclass
class Get11:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter18]
    responses: Responses21


@dataclass
class AnyOfItem(Schema):
    pass


@dataclass
class MappingModel:
    garbage_collector: str


@dataclass
class Discriminator:
    property_name: str
    mapping: MappingModel


@dataclass
class Previous:
    title: str
    description: str
    type: str
    any_of: Sequence[AnyOfItem]
    discriminator: Discriminator


@dataclass
class Properties1:
    previous: Previous


@dataclass
class Schema46:
    title: str
    description: str
    type: str
    properties: Properties1


@dataclass
class ApplicationJson27:
    schema_: Schema46


@dataclass
class Content27:
    application_json: ApplicationJson27


@dataclass
class Field20017:
    description: str
    content: Content27


@dataclass
class Responses22:
    field_200: Field20017
    field_401: Field401


@dataclass
class Post6:
    tags: Sequence[str]
    summary: str
    operation_id: str
    responses: Responses22


@dataclass
class FieldV2ConfigRepository:
    get: Get11
    post: Post6


@dataclass
class Schema47(Schema18):
    pass


@dataclass
class Examples41(Examples17):
    pass


@dataclass
class Parameter19:
    name: str
    in_: str
    description: str
    schema_: Schema47
    examples: Examples41 | None = None


@dataclass
class Schema48(Schema):
    pass


@dataclass
class Examples42(Examples18):
    pass


@dataclass
class ApplicationJson28:
    schema_: Schema48
    examples: Examples42


@dataclass
class Content28:
    application_json: ApplicationJson28


@dataclass
class Field20018:
    description: str
    content: Content28


@dataclass
class Responses23:
    field_200: Field20018
    field_401: Field401


@dataclass
class Get12:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter19]
    responses: Responses23


@dataclass
class Schema49(Schema1):
    pass


@dataclass
class Examples43:
    reference_type: ReferenceType


@dataclass
class Parameter20:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema49
    examples: Examples43 | None = None


@dataclass
class Schema50(Schema):
    pass


@dataclass
class Examples44(Examples29):
    pass


@dataclass
class ApplicationJson29:
    schema_: Schema50
    examples: Examples44


@dataclass
class Content29:
    application_json: ApplicationJson29


@dataclass
class RequestBody8:
    description: str
    content: Content29
    required: bool


@dataclass
class SingleReferenceResponse(Schema):
    pass


@dataclass
class Examples45:
    single_reference_response: SingleReferenceResponse


@dataclass
class ApplicationJson30:
    schema_: Schema50
    examples: Examples45


@dataclass
class Content30:
    application_json: ApplicationJson30


@dataclass
class Field20019:
    description: str
    content: Content30


@dataclass
class Responses24:
    field_200: Field20019
    field_401: Field401
    field_403: Field403
    field_409: Field409


@dataclass
class Post7:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter20]
    request_body: RequestBody8
    responses: Responses24


@dataclass
class FieldV2Trees:
    get: Get12
    post: Post7


@dataclass
class Schema52:
    pattern: str


@dataclass
class RefWithHash(Schema):
    pass


@dataclass
class Examples46:
    ref_with_hash: RefWithHash


@dataclass
class Parameter21:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema52
    examples: Examples46


@dataclass
class Schema53(Schema):
    pass


@dataclass
class Examples47(Examples20):
    pass


@dataclass
class ApplicationJson31:
    schema_: Schema53
    examples: Examples47


@dataclass
class Content31:
    application_json: ApplicationJson31


@dataclass
class RequestBody9:
    description: str
    content: Content31
    required: bool


@dataclass
class CommitResponse(Schema):
    pass


@dataclass
class Examples48:
    commit_response: CommitResponse


@dataclass
class ApplicationJson32:
    schema_: Schema53
    examples: Examples48


@dataclass
class Content32:
    application_json: ApplicationJson32


@dataclass
class Field20020:
    description: str
    content: Content32


@dataclass
class Responses25:
    field_200: Field20020
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post8:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter21]
    request_body: RequestBody9
    responses: Responses25


@dataclass
class FieldV2TreesBranchHistoryCommit:
    post: Post8


@dataclass
class Schema55(Schema52):
    pass


@dataclass
class Examples49(Examples46):
    pass


@dataclass
class Parameter22:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema55
    examples: Examples49


@dataclass
class Schema56(Schema):
    pass


@dataclass
class Examples50(Examples23):
    pass


@dataclass
class ApplicationJson33:
    schema_: Schema56
    examples: Examples50


@dataclass
class Content33:
    application_json: ApplicationJson33


@dataclass
class RequestBody10:
    description: str
    content: Content33
    required: bool


@dataclass
class Examples51(Examples24):
    pass


@dataclass
class ApplicationJson34:
    schema_: Schema56
    examples: Examples51


@dataclass
class Content34:
    application_json: ApplicationJson34


@dataclass
class Field2044:
    description: str
    content: Content34


@dataclass
class Responses26:
    field_204: Field2044
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post9:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter22]
    request_body: RequestBody10
    responses: Responses26


@dataclass
class FieldV2TreesBranchHistoryMerge:
    post: Post9


@dataclass
class Schema58(Schema52):
    pass


@dataclass
class Examples52(Examples46):
    pass


@dataclass
class Parameter23:
    name: str
    in_: str
    description: str
    required: bool
    schema_: Schema58
    examples: Examples52


@dataclass
class Schema59(Schema):
    pass


@dataclass
class Examples53(Examples26):
    pass


@dataclass
class ApplicationJson35:
    schema_: Schema59
    examples: Examples53


@dataclass
class Content35:
    application_json: ApplicationJson35


@dataclass
class RequestBody11:
    description: str
    content: Content35
    required: bool


@dataclass
class Examples54(Examples24):
    pass


@dataclass
class ApplicationJson36:
    schema_: Schema59
    examples: Examples54


@dataclass
class Content36:
    application_json: ApplicationJson36


@dataclass
class Field20021:
    description: str
    content: Content36


@dataclass
class Responses27:
    field_200: Field20021
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Post10:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter23]
    request_body: RequestBody11
    responses: Responses27


@dataclass
class FieldV2TreesBranchHistoryTransplant:
    post: Post10


@dataclass
class Schema61:
    pattern: str | None = None
    type: str | None = None
    items: Items1 | None = None
    field_ref: str | None = None
    format: str | None = None


@dataclass
class RefWithTimestampMillisSinceEpoch(Schema):
    pass


@dataclass
class RefWithTimestampInstant(Schema):
    pass


@dataclass
class RefWithNthPredecessor(Schema):
    pass


@dataclass
class RefWithMergeParent(Schema):
    pass


@dataclass
class RefDefault(Schema):
    pass


@dataclass
class RefDetached(Schema):
    pass


@dataclass
class Examples55:
    ref: Ref | None = None
    ref_with_hash: RefWithHash | None = None
    ref_with_timestamp_millis_since_epoch: RefWithTimestampMillisSinceEpoch | None = None
    ref_with_timestamp_instant: RefWithTimestampInstant | None = None
    ref_with_nth_predecessor: RefWithNthPredecessor | None = None
    ref_with_merge_parent: RefWithMergeParent | None = None
    ref_default: RefDefault | None = None
    ref_detached: RefDetached | None = None
    content_key_get: ContentKeyGet | None = None


@dataclass
class Parameter24:
    name: str
    in_: str
    description: str
    schema_: Schema61
    required: bool | None = None
    examples: Examples55 | None = None


@dataclass
class Schema62(Schema):
    pass


@dataclass
class DiffResponseWithRef(Schema):
    pass


@dataclass
class Examples56:
    diff_response_with_ref: DiffResponseWithRef


@dataclass
class ApplicationJson37:
    schema_: Schema62
    examples: Examples56


@dataclass
class Content37:
    application_json: ApplicationJson37


@dataclass
class Field20022:
    description: str
    content: Content37


@dataclass
class Responses28:
    field_200: Field20022
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get13:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter24]
    responses: Responses28


@dataclass
class FieldV2TreesFromRefDiffToRef:
    get: Get13


@dataclass
class Schema63(Schema16):
    pass


@dataclass
class Examples57:
    ref: Ref
    ref_default: RefDefault


@dataclass
class Parameter25:
    name: str
    in_: str
    description: str
    schema_: Schema63
    required: bool | None = None
    examples: Examples57 | None = None


@dataclass
class Schema64(Schema):
    pass


@dataclass
class SingleReferenceResponseWithMetadata(Schema):
    pass


@dataclass
class Examples58:
    single_reference_response: SingleReferenceResponse
    single_reference_response_with_metadata: SingleReferenceResponseWithMetadata


@dataclass
class ApplicationJson38:
    schema_: Schema64
    examples: Examples58


@dataclass
class Content38:
    application_json: ApplicationJson38


@dataclass
class Field20023:
    description: str
    content: Content38


@dataclass
class Responses29:
    field_200: Field20023
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get14:
    tags: Sequence[str]
    summary: str
    operation_id: str
    parameters: Sequence[Parameter25]
    responses: Responses29


@dataclass
class Schema65:
    pattern: str | None = None
    type: str | None = None


@dataclass
class Examples59:
    ref_with_hash: RefWithHash | None = None
    reference_type: ReferenceType | None = None


@dataclass
class Parameter26:
    name: str
    in_: str
    description: str
    schema_: Schema65
    examples: Examples59
    required: bool | None = None


@dataclass
class Schema66(Schema):
    pass


@dataclass
class Examples60(Examples38):
    pass


@dataclass
class ApplicationJson39:
    schema_: Schema66
    examples: Examples60


@dataclass
class Content39:
    application_json: ApplicationJson39


@dataclass
class RequestBody12:
    description: str
    content: Content39
    required: bool


@dataclass
class Examples61(Examples45):
    pass


@dataclass
class ApplicationJson40:
    schema_: Schema66
    examples: Examples61


@dataclass
class Content40:
    application_json: ApplicationJson40


@dataclass
class Field20024:
    description: str
    content: Content40


@dataclass
class Responses30:
    field_200: Field20024
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Put2:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter26]
    request_body: RequestBody12
    responses: Responses30


@dataclass
class Schema68(Schema65):
    pass


@dataclass
class Examples62(Examples59):
    pass


@dataclass
class Parameter27:
    name: str
    in_: str
    description: str
    schema_: Schema68
    examples: Examples62
    required: bool | None = None


@dataclass
class Schema69(Schema):
    pass


@dataclass
class Examples63(Examples45):
    pass


@dataclass
class ApplicationJson41:
    schema_: Schema69
    examples: Examples63


@dataclass
class Content41:
    application_json: ApplicationJson41


@dataclass
class Field20025:
    description: str
    content: Content41


@dataclass
class Responses31:
    field_200: Field20025
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404
    field_409: Field409


@dataclass
class Delete2:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter27]
    responses: Responses31


@dataclass
class FieldV2TreesRef:
    get: Get14
    put: Put2
    delete: Delete2


@dataclass
class Items3(Schema1):
    pass


@dataclass
class Schema70:
    pattern: str | None = None
    type: str | None = None
    items: Items3 | None = None


@dataclass
class Examples64:
    ref: Ref
    ref_with_hash: RefWithHash
    ref_with_timestamp_millis_since_epoch: RefWithTimestampMillisSinceEpoch
    ref_with_timestamp_instant: RefWithTimestampInstant
    ref_with_nth_predecessor: RefWithNthPredecessor
    ref_with_merge_parent: RefWithMergeParent
    ref_default: RefDefault
    ref_detached: RefDetached


@dataclass
class Parameter28:
    name: str
    in_: str
    description: str
    schema_: Schema70
    required: bool | None = None
    examples: Examples64 | None = None


@dataclass
class Schema71(Schema):
    pass


@dataclass
class MultipleContentsResponse(Schema):
    pass


@dataclass
class Examples65:
    multiple_contents_response: MultipleContentsResponse


@dataclass
class ApplicationJson42:
    schema_: Schema71
    examples: Examples65


@dataclass
class Content42:
    application_json: ApplicationJson42


@dataclass
class Field20026:
    description: str
    content: Content42


@dataclass
class Responses32:
    field_200: Field20026
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get15:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter28]
    responses: Responses32


@dataclass
class Schema72(Schema65):
    pass


@dataclass
class Examples66(Examples64):
    pass


@dataclass
class Parameter29:
    name: str
    in_: str
    description: str
    schema_: Schema72
    required: bool | None = None
    examples: Examples66 | None = None


@dataclass
class Schema73(Schema):
    pass


@dataclass
class Examples67(Examples2):
    pass


@dataclass
class ApplicationJson43:
    schema_: Schema73
    examples: Examples67


@dataclass
class Content43:
    application_json: ApplicationJson43


@dataclass
class RequestBody13:
    description: str
    content: Content43


@dataclass
class Examples68(Examples65):
    pass


@dataclass
class ApplicationJson44:
    schema_: Schema73
    examples: Examples68


@dataclass
class Content44:
    application_json: ApplicationJson44


@dataclass
class Field20027:
    description: str
    content: Content44


@dataclass
class Responses33:
    field_200: Field20027
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Post11:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter29]
    request_body: RequestBody13
    responses: Responses33


@dataclass
class FieldV2TreesRefContents:
    get: Get15
    post: Post11


@dataclass
class Schema75(Schema8):
    pass


@dataclass
class Examples69(Examples64):
    pass


@dataclass
class Parameter30:
    name: str
    in_: str
    description: str
    schema_: Schema75
    required: bool | None = None
    examples: Examples69 | None = None


@dataclass
class Schema76(Schema):
    pass


@dataclass
class ContentResponseIceberg(Schema):
    pass


@dataclass
class Examples70:
    content_response_iceberg: ContentResponseIceberg


@dataclass
class ApplicationJson45:
    schema_: Schema76
    examples: Examples70


@dataclass
class Content45:
    application_json: ApplicationJson45


@dataclass
class Field20028:
    description: str
    content: Content45


@dataclass
class Responses34:
    field_200: Field20028
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get16:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter30]
    responses: Responses34


@dataclass
class FieldV2TreesRefContentsKey:
    get: Get16


@dataclass
class Items4(Schema):
    pass


@dataclass
class Schema77:
    pattern: str | None = None
    type: str | None = None
    items: Items4 | None = None
    field_ref: str | None = None
    format: str | None = None


@dataclass
class Examples71:
    ref: Ref | None = None
    ref_with_hash: RefWithHash | None = None
    ref_with_timestamp_millis_since_epoch: RefWithTimestampMillisSinceEpoch | None = None
    ref_with_timestamp_instant: RefWithTimestampInstant | None = None
    ref_with_nth_predecessor: RefWithNthPredecessor | None = None
    ref_with_merge_parent: RefWithMergeParent | None = None
    ref_default: RefDefault | None = None
    ref_detached: RefDetached | None = None
    expr_by_namespace: ExprByNamespace | None = None
    expr_by_content_type: ExprByContentType | None = None
    expr_by_namespace_and_content_type: ExprByNamespaceAndContentType | None = None
    content_key_get: ContentKeyGet | None = None


@dataclass
class Parameter31:
    name: str
    in_: str
    description: str
    schema_: Schema77
    required: bool | None = None
    examples: Examples71 | None = None


@dataclass
class Schema78(Schema):
    pass


@dataclass
class EntriesResponseV2(Schema):
    pass


@dataclass
class Examples72:
    entries_response_v2: EntriesResponseV2


@dataclass
class ApplicationJson46:
    schema_: Schema78
    examples: Examples72


@dataclass
class Content46:
    application_json: ApplicationJson46


@dataclass
class Default2:
    description: str
    content: Content46


@dataclass
class ApplicationJson47:
    schema_: Schema78


@dataclass
class Content47:
    application_json: ApplicationJson47


@dataclass
class Field20029:
    description: str
    content: Content47


@dataclass
class Responses35:
    default: Default2
    field_200: Field20029
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get17:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter31]
    responses: Responses35


@dataclass
class FieldV2TreesRefEntries:
    get: Get17


@dataclass
class Schema80:
    pattern: str | None = None
    field_ref: str | None = None
    type: str | None = None
    format: str | None = None


@dataclass
class Examples73:
    ref: Ref | None = None
    ref_with_hash: RefWithHash | None = None
    ref_with_timestamp_millis_since_epoch: RefWithTimestampMillisSinceEpoch | None = None
    ref_with_timestamp_instant: RefWithTimestampInstant | None = None
    ref_with_nth_predecessor: RefWithNthPredecessor | None = None
    ref_with_merge_parent: RefWithMergeParent | None = None
    ref_default: RefDefault | None = None
    ref_detached: RefDetached | None = None
    expr_by_commit_author: ExprByCommitAuthor | None = None
    expr_by_commit_committer: ExprByCommitCommitter | None = None
    expr_by_commit_time: ExprByCommitTime | None = None
    expr_by_commit_operations_table_name: ExprByCommitOperationsTableName | None = None
    expr_by_commit_operations_type: ExprByCommitOperationsType | None = None
    null_hash: NullHash | None = None
    hash: Hash | None = None


@dataclass
class Parameter32:
    name: str
    in_: str
    description: str
    schema_: Schema80
    required: bool | None = None
    examples: Examples73 | None = None


@dataclass
class Schema81(Schema):
    pass


@dataclass
class Examples74(Examples36):
    pass


@dataclass
class ApplicationJson48:
    schema_: Schema81
    examples: Examples74


@dataclass
class Content48:
    application_json: ApplicationJson48


@dataclass
class Field20030:
    description: str
    content: Content48


@dataclass
class Responses36:
    field_200: Field20030
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get18:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter32]
    responses: Responses36


@dataclass
class FieldV2TreesRefHistory:
    get: Get18


@dataclass
class Schema82(Schema35):
    pass


@dataclass
class Examples75(Examples57):
    pass


@dataclass
class Parameter33:
    name: str
    in_: str
    description: str
    schema_: Schema82
    required: bool | None = None
    examples: Examples75 | None = None


@dataclass
class Schema83(Schema):
    pass


@dataclass
class ReferenceHistoryResponse(Schema):
    pass


@dataclass
class Examples76:
    reference_history_response: ReferenceHistoryResponse


@dataclass
class ApplicationJson49:
    schema_: Schema83
    examples: Examples76


@dataclass
class Content49:
    application_json: ApplicationJson49


@dataclass
class Field20031:
    description: str
    content: Content49


@dataclass
class Responses37:
    field_200: Field20031
    field_400: Field400
    field_401: Field401
    field_403: Field403
    field_404: Field404


@dataclass
class Get19:
    tags: Sequence[str]
    summary: str
    description: str
    operation_id: str
    parameters: Sequence[Parameter33]
    responses: Responses37


@dataclass
class FieldV2TreesRefRecentChanges:
    get: Get19


@dataclass
class Paths:
    field_v1_config: FieldV1Config
    field_v1_contents: FieldV1Contents
    field_v1_contents__key_: FieldV1ContentsKey
    field_v1_diffs__from_ref_with_hash_____to_ref_with_hash_: FieldV1DiffsFromRefWithHashToRefWithHash
    field_v1_namespaces_namespace__ref___name_: FieldV1NamespacesNamespaceRefName
    field_v1_namespaces__ref_: FieldV1NamespacesRef
    field_v1_trees: FieldV1Trees
    field_v1_trees_branch__branch_name__commit: FieldV1TreesBranchBranchNameCommit
    field_v1_trees_branch__branch_name__merge: FieldV1TreesBranchBranchNameMerge
    field_v1_trees_branch__branch_name__transplant: FieldV1TreesBranchBranchNameTransplant
    field_v1_trees_tree: FieldV1TreesTree
    field_v1_trees_tree__ref_: FieldV1TreesTreeRef
    field_v1_trees_tree__ref__entries: FieldV1TreesTreeRefEntries
    field_v1_trees_tree__ref__log: FieldV1TreesTreeRefLog
    field_v1_trees__reference_type___reference_name_: FieldV1TreesReferenceTypeReferenceName
    field_v2_config: FieldV2Config
    field_v2_config_repository: FieldV2ConfigRepository
    field_v2_trees: FieldV2Trees
    field_v2_trees__branch__history_commit: FieldV2TreesBranchHistoryCommit
    field_v2_trees__branch__history_merge: FieldV2TreesBranchHistoryMerge
    field_v2_trees__branch__history_transplant: FieldV2TreesBranchHistoryTransplant
    field_v2_trees__from_ref__diff__to_ref_: FieldV2TreesFromRefDiffToRef
    field_v2_trees__ref_: FieldV2TreesRef
    field_v2_trees__ref__contents: FieldV2TreesRefContents
    field_v2_trees__ref__contents__key_: FieldV2TreesRefContentsKey
    field_v2_trees__ref__entries: FieldV2TreesRefEntries
    field_v2_trees__ref__history: FieldV2TreesRefHistory
    field_v2_trees__ref__recent_changes: FieldV2TreesRefRecentChanges


@dataclass
class Key(Schema):
    pass


@dataclass
class Properties2:
    key: Key


@dataclass
class AddedContent:
    required: Sequence[str]
    type: str
    properties: Properties2


@dataclass
class Properties3(Properties2):
    pass


@dataclass
class AddedContentV2:
    required: Sequence[str]
    type: str
    properties: Properties3


@dataclass
class Name:
    pattern: str
    type: str


@dataclass
class Metadata(Schema):
    pass


@dataclass
class Hash15(Name):
    pass


@dataclass
class Properties4:
    name: Name
    metadata: Metadata
    hash: Hash15


@dataclass
class Branch:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties4


@dataclass
class Properties5(Properties4):
    pass


@dataclass
class BranchV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties5


@dataclass
class Properties6(Properties4):
    pass


@dataclass
class BranchV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties6


@dataclass
class CommitConsistency:
    enum: Sequence[str]
    type: str


@dataclass
class CommitConsistencyV2(CommitConsistency):
    pass


@dataclass
class Committer(Schema1):
    pass


@dataclass
class Author(Schema1):
    pass


@dataclass
class Items5(Schema1):
    pass


@dataclass
class Authors:
    type: str
    items: Items5


@dataclass
class SignedOffBy(Schema1):
    pass


@dataclass
class AllSignedOffBy(Authors):
    pass


@dataclass
class Message(Name):
    pass


@dataclass
class CommitTime:
    format: str
    type: str
    example: str


@dataclass
class AuthorTime(CommitTime):
    pass


@dataclass
class AdditionalProperties(Schema1):
    pass


@dataclass
class Properties8:
    type: str
    additional_properties: AdditionalProperties


@dataclass
class AdditionalProperties1(Authors):
    pass


@dataclass
class AllProperties:
    type: str
    additional_properties: AdditionalProperties1


@dataclass
class ParentCommitHashes(Authors):
    pass


@dataclass
class Properties7:
    hash: Hash15
    committer: Committer
    author: Author
    authors: Authors
    signed_off_by: SignedOffBy
    all_signed_off_by: AllSignedOffBy
    message: Message
    commit_time: CommitTime
    author_time: AuthorTime
    properties: Properties8
    all_properties: AllProperties
    parent_commit_hashes: ParentCommitHashes


@dataclass
class CommitMeta:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties7


@dataclass
class AdditionalProperties2(Schema1):
    pass


@dataclass
class Properties10:
    type: str
    additional_properties: AdditionalProperties2


@dataclass
class Properties9:
    hash: Hash15
    committer: Committer
    author: Author
    signed_off_by: SignedOffBy
    message: Message
    commit_time: CommitTime
    author_time: AuthorTime
    properties: Properties10


@dataclass
class CommitMetaV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties9


@dataclass
class Authors1(Authors):
    pass


@dataclass
class AllSignedOffBy1(Authors):
    pass


@dataclass
class AdditionalProperties3(Authors):
    pass


@dataclass
class AllProperties1:
    type: str
    additional_properties: AdditionalProperties3


@dataclass
class ParentCommitHashes1(Authors):
    pass


@dataclass
class Properties11:
    hash: Hash15
    committer: Committer
    authors: Authors1
    all_signed_off_by: AllSignedOffBy1
    message: Message
    commit_time: CommitTime
    author_time: AuthorTime
    all_properties: AllProperties1
    parent_commit_hashes: ParentCommitHashes1


@dataclass
class CommitMetaV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties11


@dataclass
class TargetBranch(Schema):
    pass


@dataclass
class Items13(Schema):
    pass


@dataclass
class AddedContents:
    type: str
    items: Items13


@dataclass
class Properties12:
    target_branch: TargetBranch
    added_contents: AddedContents


@dataclass
class CommitResponse1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties12


@dataclass
class AddedContents1(AddedContents):
    pass


@dataclass
class Properties13:
    target_branch: TargetBranch
    added_contents: AddedContents1


@dataclass
class CommitResponseV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties13


@dataclass
class Conflict(Schema1):
    pass


@dataclass
class ConflictV2(Schema1):
    pass


@dataclass
class Id(Schema1):
    pass


@dataclass
class Properties14:
    id: Id


@dataclass
class AnyOfItem1:
    field_ref: str | None = None
    type: str | None = None


@dataclass
class Mapping1:
    iceberg_table: str
    delta_lake_table: str
    iceberg_view: str
    namespace: str
    udf: str


@dataclass
class Discriminator1:
    property_name: str
    mapping: Mapping1


@dataclass
class Content50:
    title: str
    type: str
    properties: Properties14
    any_of: Sequence[AnyOfItem1]
    discriminator: Discriminator1


@dataclass
class Items15(Schema1):
    pass


@dataclass
class Elements:
    min_items: int
    type: str
    items: Items15


@dataclass
class Properties15:
    elements: Elements


@dataclass
class ContentKey:
    required: Sequence[str]
    type: str
    properties: Properties15


@dataclass
class MergeBehavior(Schema):
    pass


@dataclass
class Conflict1(Schema):
    pass


@dataclass
class Properties16:
    key: Key
    merge_behavior: MergeBehavior
    conflict: Conflict1


@dataclass
class ContentKeyDetails:
    title: str
    type: str
    properties: Properties16


@dataclass
class Properties17:
    key: Key
    merge_behavior: MergeBehavior


@dataclass
class ContentKeyDetailsV1:
    title: str
    type: str
    properties: Properties17


@dataclass
class Properties18(Properties16):
    pass


@dataclass
class ContentKeyDetailsV2:
    title: str
    type: str
    properties: Properties18


@dataclass
class Elements1(Elements):
    pass


@dataclass
class Properties19:
    elements: Elements1


@dataclass
class ContentKeyV1:
    required: Sequence[str]
    type: str
    properties: Properties19


@dataclass
class Elements2(Elements):
    pass


@dataclass
class Properties20:
    elements: Elements2


@dataclass
class ContentKeyV2:
    required: Sequence[str]
    type: str
    properties: Properties20


@dataclass
class Variant:
    min_length: int
    type: str


@dataclass
class Properties21:
    variant: Variant


@dataclass
class Discriminator2:
    property_name: str


@dataclass
class ContentMetadata:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties21
    discriminator: Discriminator2


@dataclass
class Properties22(Properties21):
    pass


@dataclass
class ContentMetadataV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties22
    discriminator: Discriminator2


@dataclass
class Content51(Schema):
    pass


@dataclass
class EffectiveReference(Schema):
    pass


@dataclass
class Documentation(Schema):
    pass


@dataclass
class Properties23:
    content: Content51
    effective_reference: EffectiveReference
    documentation: Documentation


@dataclass
class ContentResponseV2:
    required: Sequence[str]
    type: str
    properties: Properties23


@dataclass
class Properties24:
    key: Key
    content: Content51
    documentation: Documentation


@dataclass
class ContentWithKey:
    required: Sequence[str]
    type: str
    properties: Properties24


@dataclass
class Properties25:
    key: Key
    content: Content51


@dataclass
class ContentWithKeyV1:
    required: Sequence[str]
    type: str
    properties: Properties25


@dataclass
class Properties26(Properties24):
    pass


@dataclass
class ContentWithKeyV2:
    required: Sequence[str]
    type: str
    properties: Properties26


@dataclass
class Properties27(Properties14):
    pass


@dataclass
class Discriminator4(Discriminator1):
    pass


@dataclass
class ContentV1:
    title: str
    type: str
    properties: Properties27
    any_of: Sequence[AnyOfItem1]
    discriminator: Discriminator4


@dataclass
class Properties28(Properties14):
    pass


@dataclass
class Discriminator5(Discriminator1):
    pass


@dataclass
class ContentV2:
    title: str
    type: str
    properties: Properties28
    any_of: Sequence[AnyOfItem1]
    discriminator: Discriminator5


@dataclass
class Properties29(Properties2):
    pass


@dataclass
class Delete3:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties29


@dataclass
class Properties30(Properties2):
    pass


@dataclass
class DeleteV1:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties30


@dataclass
class Properties31(Properties2):
    pass


@dataclass
class DeleteV2:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties31


@dataclass
class MetadataLocationHistory:
    type: str
    items: Items15


@dataclass
class CheckpointLocationHistory(MetadataLocationHistory):
    pass


@dataclass
class LastCheckpoint(Schema1):
    pass


@dataclass
class Properties32:
    id: Id
    metadata_location_history: MetadataLocationHistory
    checkpoint_location_history: CheckpointLocationHistory
    last_checkpoint: LastCheckpoint


@dataclass
class DeltaLakeTable:
    required: Sequence[str]
    type: str
    properties: Properties32


@dataclass
class MetadataLocationHistory1(MetadataLocationHistory):
    pass


@dataclass
class CheckpointLocationHistory1(MetadataLocationHistory):
    pass


@dataclass
class Properties33:
    id: Id
    metadata_location_history: MetadataLocationHistory1
    checkpoint_location_history: CheckpointLocationHistory1
    last_checkpoint: LastCheckpoint


@dataclass
class DeltaLakeTableV1:
    required: Sequence[str]
    type: str
    properties: Properties33


@dataclass
class MetadataLocationHistory2(MetadataLocationHistory):
    pass


@dataclass
class CheckpointLocationHistory2(MetadataLocationHistory):
    pass


@dataclass
class Properties34:
    id: Id
    metadata_location_history: MetadataLocationHistory2
    checkpoint_location_history: CheckpointLocationHistory2
    last_checkpoint: LastCheckpoint


@dataclass
class DeltaLakeTableV2:
    required: Sequence[str]
    type: str
    properties: Properties34


@dataclass
class Hash21:
    min_length: int
    pattern: str
    type: str


@dataclass
class Properties35:
    hash: Hash21
    metadata: Metadata


@dataclass
class Detached:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties35


@dataclass
class Properties36(Properties35):
    pass


@dataclass
class DetachedV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties36


@dataclass
class Properties37(Properties35):
    pass


@dataclass
class DetachedV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties37


@dataclass
class From(Schema):
    pass


@dataclass
class To(Schema):
    pass


@dataclass
class Properties38:
    key: Key
    from_: From
    to: To


@dataclass
class DiffEntry:
    type: str
    properties: Properties38


@dataclass
class Properties39(Properties38):
    pass


@dataclass
class DiffEntryV1:
    type: str
    properties: Properties39


@dataclass
class Properties40(Properties38):
    pass


@dataclass
class DiffEntryV2:
    type: str
    properties: Properties40


@dataclass
class HasMore(Schema1):
    pass


@dataclass
class Token(Variant):
    pass


@dataclass
class Items24(Schema):
    pass


@dataclass
class Diffs:
    type: str
    items: Items24


@dataclass
class EffectiveFromReference(Schema):
    pass


@dataclass
class EffectiveToReference(Schema):
    pass


@dataclass
class Properties41:
    has_more: HasMore
    token: Token
    diffs: Diffs
    effective_from_reference: EffectiveFromReference
    effective_to_reference: EffectiveToReference


@dataclass
class DiffResponse1:
    title: str
    type: str
    properties: Properties41


@dataclass
class Diffs1(Diffs):
    pass


@dataclass
class Properties42:
    has_more: HasMore
    token: Token
    diffs: Diffs1


@dataclass
class DiffResponseV1:
    title: str
    type: str
    properties: Properties42


@dataclass
class Diffs2(Diffs):
    pass


@dataclass
class Properties43:
    has_more: HasMore
    token: Token
    diffs: Diffs2
    effective_from_reference: EffectiveFromReference
    effective_to_reference: EffectiveToReference


@dataclass
class DiffResponseV2:
    title: str
    type: str
    properties: Properties43


@dataclass
class MimeType(Schema1):
    pass


@dataclass
class Text(Schema1):
    pass


@dataclass
class Properties44:
    mime_type: MimeType
    text: Text


@dataclass
class Documentation3:
    required: Sequence[str]
    type: str
    properties: Properties44


@dataclass
class Properties45(Properties44):
    pass


@dataclass
class DocumentationV2:
    required: Sequence[str]
    type: str
    properties: Properties45


@dataclass
class Entries(Diffs):
    pass


@dataclass
class Properties46:
    has_more: HasMore
    token: Token
    entries: Entries


@dataclass
class EntriesResponseV1:
    required: Sequence[str]
    type: str
    properties: Properties46


@dataclass
class Entries1(Diffs):
    pass


@dataclass
class Properties47:
    has_more: HasMore
    token: Token
    entries: Entries1
    effective_reference: EffectiveReference


@dataclass
class EntriesResponseV21:
    required: Sequence[str]
    type: str
    properties: Properties47


@dataclass
class Type(Schema):
    pass


@dataclass
class Name3(Schema):
    pass


@dataclass
class Properties48:
    type: Type
    name: Name3


@dataclass
class EntryV1:
    required: Sequence[str]
    type: str
    properties: Properties48


@dataclass
class ContentId(Schema1):
    pass


@dataclass
class Properties49:
    type: Type
    name: Name3
    content_id: ContentId
    content: Content51


@dataclass
class EntryV2:
    required: Sequence[str]
    type: str
    properties: Properties49


@dataclass
class FetchOption(CommitConsistency):
    pass


@dataclass
class DefaultCutoffPolicy:
    description: str
    pattern: str
    type: str


@dataclass
class PerRefCutoffPolicies(Diffs):
    pass


@dataclass
class NewFilesGracePeriod:
    format: str
    title: str
    description: str
    type: str
    example: str


@dataclass
class ExpectedFileCountPerContent:
    format: str
    title: str
    type: str


@dataclass
class Properties50:
    default_cutoff_policy: DefaultCutoffPolicy
    per_ref_cutoff_policies: PerRefCutoffPolicies
    new_files_grace_period: NewFilesGracePeriod
    expected_file_count_per_content: ExpectedFileCountPerContent


@dataclass
class GarbageCollectorConfig:
    title: str
    type: str
    properties: Properties50


@dataclass
class PerRefCutoffPolicies1(Diffs):
    pass


@dataclass
class Properties51:
    default_cutoff_policy: DefaultCutoffPolicy
    per_ref_cutoff_policies: PerRefCutoffPolicies1
    new_files_grace_period: NewFilesGracePeriod
    expected_file_count_per_content: ExpectedFileCountPerContent


@dataclass
class GarbageCollectorConfigV2:
    title: str
    type: str
    properties: Properties51


@dataclass
class RequestedKeys:
    min_items: int
    type: str
    items: Items24


@dataclass
class Properties52:
    requested_keys: RequestedKeys


@dataclass
class GetMultipleContentsRequest:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties52


@dataclass
class Contents(Diffs):
    pass


@dataclass
class Properties53:
    contents: Contents
    effective_reference: EffectiveReference


@dataclass
class GetMultipleContentsResponse:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties53


@dataclass
class Contents1(Diffs):
    pass


@dataclass
class Properties54:
    contents: Contents1


@dataclass
class GetMultipleContentsResponseV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties54


@dataclass
class Contents2(Diffs):
    pass


@dataclass
class Properties55:
    contents: Contents2
    effective_reference: EffectiveReference


@dataclass
class GetMultipleContentsResponseV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties55


@dataclass
class Namespaces(Diffs):
    pass


@dataclass
class Properties56:
    namespaces: Namespaces


@dataclass
class GetNamespacesResponseV1:
    required: Sequence[str]
    type: str
    properties: Properties56


@dataclass
class MetadataLocation(Name):
    pass


@dataclass
class SnapshotId:
    format: str
    type: str


@dataclass
class SchemaId(SnapshotId):
    pass


@dataclass
class SpecId(SnapshotId):
    pass


@dataclass
class SortOrderId(SnapshotId):
    pass


@dataclass
class Metadata6:
    type: str
    additional_properties: Mapping[str, Any]
    deprecated: bool


@dataclass
class Properties57:
    id: Id
    metadata_location: MetadataLocation
    snapshot_id: SnapshotId
    schema_id: SchemaId
    spec_id: SpecId
    sort_order_id: SortOrderId
    metadata: Metadata6


@dataclass
class IcebergTable:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties57


@dataclass
class Properties58(Properties57):
    pass


@dataclass
class IcebergTableV1:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties58


@dataclass
class Properties59:
    id: Id
    metadata_location: MetadataLocation
    snapshot_id: SnapshotId
    schema_id: SchemaId
    spec_id: SpecId
    sort_order_id: SortOrderId


@dataclass
class IcebergTableV2:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties59


@dataclass
class VersionId(SnapshotId):
    pass


@dataclass
class SqlText(Name):
    pass


@dataclass
class Dialect(Schema1):
    pass


@dataclass
class Properties60:
    id: Id
    metadata_location: MetadataLocation
    version_id: VersionId
    schema_id: SchemaId
    sql_text: SqlText
    dialect: Dialect
    metadata: Metadata6


@dataclass
class IcebergView:
    required: Sequence[str]
    type: str
    properties: Properties60


@dataclass
class Properties61(Properties60):
    pass


@dataclass
class IcebergViewV1:
    required: Sequence[str]
    type: str
    properties: Properties61


@dataclass
class Properties62:
    id: Id
    metadata_location: MetadataLocation
    version_id: VersionId
    schema_id: SchemaId
    sql_text: SqlText
    dialect: Dialect


@dataclass
class IcebergViewV2:
    required: Sequence[str]
    type: str
    properties: Properties62


@dataclass
class CommitMeta1(Schema):
    pass


@dataclass
class Items36(Schema1):
    pass


@dataclass
class AdditionalParents:
    type: str
    items: Items36
    deprecated: bool


@dataclass
class ParentCommitHash(Schema1):
    pass


@dataclass
class Items37(Schema):
    pass


@dataclass
class Operations2:
    type: str
    items: Items37


@dataclass
class Properties63:
    commit_meta: CommitMeta1
    additional_parents: AdditionalParents
    parent_commit_hash: ParentCommitHash
    operations: Operations2


@dataclass
class LogEntry:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties63


@dataclass
class Items38(Schema1):
    pass


@dataclass
class AdditionalParents1:
    type: str
    items: Items38
    deprecated: bool


@dataclass
class Items39(Schema):
    pass


@dataclass
class Operations3:
    type: str
    items: Items39


@dataclass
class Properties64:
    commit_meta: CommitMeta1
    additional_parents: AdditionalParents1
    parent_commit_hash: ParentCommitHash
    operations: Operations3


@dataclass
class LogEntryV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties64


@dataclass
class Operations4(Operations3):
    pass


@dataclass
class Properties65:
    commit_meta: CommitMeta1
    parent_commit_hash: ParentCommitHash
    operations: Operations4


@dataclass
class LogEntryV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties65


@dataclass
class LogEntries(Operations3):
    pass


@dataclass
class Properties66:
    has_more: HasMore
    token: Token
    log_entries: LogEntries


@dataclass
class LogResponse:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties66


@dataclass
class LogEntries1(Operations3):
    pass


@dataclass
class Properties67:
    has_more: HasMore
    token: Token
    log_entries: LogEntries1


@dataclass
class LogResponseV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties67


@dataclass
class LogEntries2(Operations3):
    pass


@dataclass
class Properties68:
    has_more: HasMore
    token: Token
    log_entries: LogEntries2


@dataclass
class LogResponseV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties68


@dataclass
class FromRefName(Name):
    pass


@dataclass
class FromHash(Name):
    pass


@dataclass
class KeyMergeModes(Operations3):
    pass


@dataclass
class DefaultKeyMergeMode(Schema):
    pass


@dataclass
class DryRun(Schema1):
    pass


@dataclass
class FetchAdditionalInfo(Schema1):
    pass


@dataclass
class ReturnConflictAsResult(Schema1):
    pass


@dataclass
class Properties69:
    from_ref_name: FromRefName
    from_hash: FromHash
    key_merge_modes: KeyMergeModes
    default_key_merge_mode: DefaultKeyMergeMode
    dry_run: DryRun
    fetch_additional_info: FetchAdditionalInfo
    return_conflict_as_result: ReturnConflictAsResult


@dataclass
class Merge2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties69


@dataclass
class Message3:
    description: str
    min_length: int
    type: str
    deprecated: bool


@dataclass
class FromHash1(DefaultCutoffPolicy):
    pass


@dataclass
class FromRefName1(DefaultCutoffPolicy):
    pass


@dataclass
class KeyMergeModes1:
    description: str
    type: str
    items: Items39


@dataclass
class AllOfItem(Schema):
    pass


@dataclass
class DefaultKeyMergeMode1:
    description: str
    type: str
    all_of: Sequence[AllOfItem]


@dataclass
class DryRun1:
    description: str
    type: str


@dataclass
class FetchAdditionalInfo1(DryRun1):
    pass


@dataclass
class ReturnConflictAsResult1(DryRun1):
    pass


@dataclass
class Properties70:
    message: Message3
    from_hash: FromHash1
    from_ref_name: FromRefName1
    key_merge_modes: KeyMergeModes1
    default_key_merge_mode: DefaultKeyMergeMode1
    dry_run: DryRun1
    fetch_additional_info: FetchAdditionalInfo1
    return_conflict_as_result: ReturnConflictAsResult1
    commit_meta: CommitMeta1


@dataclass
class Merge1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties70


@dataclass
class MergeBehavior3(CommitConsistency):
    pass


@dataclass
class MergeBehaviorV1(CommitConsistency):
    pass


@dataclass
class MergeBehaviorV2(CommitConsistency):
    pass


@dataclass
class MergeBehavior4(Schema):
    pass


@dataclass
class ExpectedTargetContent(Schema):
    pass


@dataclass
class ResolvedContent(Schema):
    pass


@dataclass
class ExpectedTargetDocumentation(Schema):
    pass


@dataclass
class ResolvedDocumentation(Schema):
    pass


@dataclass
class Metadata10(Operations3):
    pass


@dataclass
class Properties71:
    key: Key
    merge_behavior: MergeBehavior4
    expected_target_content: ExpectedTargetContent
    resolved_content: ResolvedContent
    expected_target_documentation: ExpectedTargetDocumentation
    resolved_documentation: ResolvedDocumentation
    metadata: Metadata10


@dataclass
class MergeKeyBehavior:
    type: str
    properties: Properties71


@dataclass
class ResultantTargetHash(Schema1):
    pass


@dataclass
class CommonAncestor(Schema1):
    pass


@dataclass
class TargetBranch2(Schema1):
    pass


@dataclass
class EffectiveTargetHash(Schema1):
    pass


@dataclass
class ExpectedHash(Schema1):
    pass


@dataclass
class Details(Operations3):
    pass


@dataclass
class Properties72:
    resultant_target_hash: ResultantTargetHash
    common_ancestor: CommonAncestor
    target_branch: TargetBranch2
    effective_target_hash: EffectiveTargetHash
    expected_hash: ExpectedHash
    details: Details


@dataclass
class MergeResponse:
    title: str
    type: str
    properties: Properties72


@dataclass
class Details1(Operations3):
    pass


@dataclass
class Properties73:
    resultant_target_hash: ResultantTargetHash
    common_ancestor: CommonAncestor
    target_branch: TargetBranch2
    effective_target_hash: EffectiveTargetHash
    expected_hash: ExpectedHash
    details: Details1


@dataclass
class MergeResponseV1:
    title: str
    type: str
    properties: Properties73


@dataclass
class Details2(Operations3):
    pass


@dataclass
class Properties74:
    resultant_target_hash: ResultantTargetHash
    common_ancestor: CommonAncestor
    target_branch: TargetBranch2
    effective_target_hash: EffectiveTargetHash
    expected_hash: ExpectedHash
    details: Details2


@dataclass
class MergeResponseV2:
    title: str
    type: str
    properties: Properties74


@dataclass
class Items50(Schema1):
    pass


@dataclass
class Elements3:
    type: str
    items: Items50


@dataclass
class AdditionalProperties4(Schema1):
    pass


@dataclass
class Properties76:
    type: str
    additional_properties: AdditionalProperties4


@dataclass
class Properties75:
    id: Id
    elements: Elements3
    properties: Properties76


@dataclass
class Namespace2:
    required: Sequence[str]
    type: str
    properties: Properties75


@dataclass
class PropertyUpdates(Properties76):
    pass


@dataclass
class PropertyRemovals:
    unique_items: bool
    type: str
    items: Items50


@dataclass
class Properties77:
    property_updates: PropertyUpdates
    property_removals: PropertyRemovals


@dataclass
class NamespaceUpdate1:
    type: str
    properties: Properties77


@dataclass
class Elements4(Elements3):
    pass


@dataclass
class Properties79(Properties76):
    pass


@dataclass
class Properties78:
    id: Id
    elements: Elements4
    properties: Properties79


@dataclass
class NamespaceV1:
    required: Sequence[str]
    type: str
    properties: Properties78


@dataclass
class Elements5(Elements3):
    pass


@dataclass
class Properties81(Properties76):
    pass


@dataclass
class Properties80:
    id: Id
    elements: Elements5
    properties: Properties81


@dataclass
class NamespaceV2:
    required: Sequence[str]
    type: str
    properties: Properties80


@dataclass
class DefaultBranch(Variant):
    pass


@dataclass
class MinSupportedApiVersion(SnapshotId):
    pass


@dataclass
class MaxSupportedApiVersion(SnapshotId):
    pass


@dataclass
class ActualApiVersion(SnapshotId):
    pass


@dataclass
class SpecVersion(DryRun1):
    pass


@dataclass
class NoAncestorHash(Schema1):
    pass


@dataclass
class RepositoryCreationTimestamp(CommitTime):
    pass


@dataclass
class OldestPossibleCommitTimestamp(CommitTime):
    pass


@dataclass
class AdditionalProperties8(Properties76):
    pass


@dataclass
class Properties82:
    default_branch: DefaultBranch
    min_supported_api_version: MinSupportedApiVersion
    max_supported_api_version: MaxSupportedApiVersion
    actual_api_version: ActualApiVersion
    spec_version: SpecVersion
    no_ancestor_hash: NoAncestorHash
    repository_creation_timestamp: RepositoryCreationTimestamp
    oldest_possible_commit_timestamp: OldestPossibleCommitTimestamp
    additional_properties: AdditionalProperties8


@dataclass
class NessieConfiguration:
    title: str
    description: str
    type: str
    properties: Properties82


@dataclass
class Properties83:
    default_branch: DefaultBranch
    max_supported_api_version: MaxSupportedApiVersion


@dataclass
class NessieConfigurationV1:
    title: str
    description: str
    type: str
    properties: Properties83


@dataclass
class AdditionalProperties11(Schema1):
    pass


@dataclass
class AdditionalProperties10:
    type: str
    additional_properties: AdditionalProperties11


@dataclass
class Properties84:
    default_branch: DefaultBranch
    min_supported_api_version: MinSupportedApiVersion
    max_supported_api_version: MaxSupportedApiVersion
    actual_api_version: ActualApiVersion
    spec_version: SpecVersion
    no_ancestor_hash: NoAncestorHash
    repository_creation_timestamp: RepositoryCreationTimestamp
    oldest_possible_commit_timestamp: OldestPossibleCommitTimestamp
    additional_properties: AdditionalProperties10


@dataclass
class NessieConfigurationV2:
    title: str
    description: str
    type: str
    properties: Properties84


@dataclass
class Properties85(Properties2):
    pass


@dataclass
class OneOfItem(Schema):
    pass


@dataclass
class Mapping4:
    put: str
    unchanged: str
    delete: str


@dataclass
class Discriminator6:
    property_name: str
    mapping: Mapping4


@dataclass
class Operation:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties85
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator6


@dataclass
class Properties86(Properties2):
    pass


@dataclass
class Discriminator7(Discriminator6):
    pass


@dataclass
class OperationV1:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties86
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator7


@dataclass
class Properties87(Properties2):
    pass


@dataclass
class Discriminator8(Discriminator6):
    pass


@dataclass
class OperationV2:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties87
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator8


@dataclass
class Items54(Schema):
    pass


@dataclass
class Operations6:
    min_items: int
    type: str
    items: Items54


@dataclass
class Properties88:
    commit_meta: CommitMeta1
    operations: Operations6


@dataclass
class Operations5:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties88


@dataclass
class ExpectedContent:
    type: str
    all_of: Sequence[AllOfItem]
    deprecated: bool


@dataclass
class Metadata11:
    type: str
    items: Items54


@dataclass
class Documentation4(Schema):
    pass


@dataclass
class Properties89:
    key: Key
    content: Content51
    expected_content: ExpectedContent
    metadata: Metadata11
    documentation: Documentation4


@dataclass
class Put3:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties89


@dataclass
class ExpectedContent1(ExpectedContent):
    pass


@dataclass
class Properties90:
    key: Key
    content: Content51
    expected_content: ExpectedContent1


@dataclass
class PutV1:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties90


@dataclass
class Metadata12(Metadata11):
    pass


@dataclass
class Properties91:
    key: Key
    content: Content51
    metadata: Metadata12
    documentation: Documentation4


@dataclass
class PutV2:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties91


@dataclass
class Name5(Name):
    pass


@dataclass
class Hash24(Name):
    pass


@dataclass
class Metadata13:
    type: str
    all_of: Sequence[AllOfItem]
    nullable: bool


@dataclass
class Properties92:
    name: Name5
    hash: Hash24
    metadata: Metadata13


@dataclass
class Mapping7:
    tag: str
    branch: str
    detached: str


@dataclass
class Discriminator9:
    property_name: str
    mapping: Mapping7


@dataclass
class Reference:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties92
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator9


@dataclass
class ReferenceNamePattern(DryRun1):
    pass


@dataclass
class Policy(DryRun1):
    pass


@dataclass
class Properties93:
    reference_name_pattern: ReferenceNamePattern
    policy: Policy


@dataclass
class ReferenceCutoffPolicy:
    title: str
    description: str
    type: str
    properties: Properties93


@dataclass
class Properties94(Properties93):
    pass


@dataclass
class ReferenceCutoffPolicyV2:
    title: str
    description: str
    type: str
    properties: Properties94


@dataclass
class Reference1(Schema):
    pass


@dataclass
class Current(DefaultKeyMergeMode1):
    pass


@dataclass
class Previous1:
    description: str
    type: str
    items: Items54


@dataclass
class CommitLogConsistency(DefaultKeyMergeMode1):
    pass


@dataclass
class Properties95:
    reference: Reference1
    current: Current
    previous: Previous1
    commit_log_consistency: CommitLogConsistency


@dataclass
class ReferenceHistoryResponse1:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties95


@dataclass
class Current1(DefaultKeyMergeMode1):
    pass


@dataclass
class Previous2(Previous1):
    pass


@dataclass
class CommitLogConsistency1(DefaultKeyMergeMode1):
    pass


@dataclass
class Properties96:
    reference: Reference1
    current: Current1
    previous: Previous2
    commit_log_consistency: CommitLogConsistency1


@dataclass
class ReferenceHistoryResponseV2:
    title: str
    description: str
    required: Sequence[str]
    type: str
    properties: Properties96


@dataclass
class CommitHash(DryRun1):
    pass


@dataclass
class CommitConsistency1(DefaultKeyMergeMode1):
    pass


@dataclass
class Meta(DefaultKeyMergeMode1):
    pass


@dataclass
class Properties97:
    commit_hash: CommitHash
    commit_consistency: CommitConsistency1
    meta: Meta


@dataclass
class ReferenceHistoryState:
    title: str
    description: str
    type: str
    properties: Properties97


@dataclass
class CommitConsistency2(DefaultKeyMergeMode1):
    pass


@dataclass
class Meta1(DefaultKeyMergeMode1):
    pass


@dataclass
class Properties98:
    commit_hash: CommitHash
    commit_consistency: CommitConsistency2
    meta: Meta1


@dataclass
class ReferenceHistoryStateV2:
    title: str
    description: str
    type: str
    properties: Properties98


@dataclass
class NumCommitsAhead(SnapshotId):
    pass


@dataclass
class NumCommitsBehind(SnapshotId):
    pass


@dataclass
class CommitMetaOfHead(Schema):
    pass


@dataclass
class CommonAncestorHash(Schema1):
    pass


@dataclass
class NumTotalCommits(SnapshotId):
    pass


@dataclass
class Properties99:
    num_commits_ahead: NumCommitsAhead
    num_commits_behind: NumCommitsBehind
    commit_meta_of_head: CommitMetaOfHead
    common_ancestor_hash: CommonAncestorHash
    num_total_commits: NumTotalCommits


@dataclass
class ReferenceMetadata:
    title: str
    description: str
    type: str
    properties: Properties99


@dataclass
class Properties100(Properties99):
    pass


@dataclass
class ReferenceMetadataV1:
    title: str
    description: str
    type: str
    properties: Properties100


@dataclass
class Properties101(Properties99):
    pass


@dataclass
class ReferenceMetadataV2:
    title: str
    description: str
    type: str
    properties: Properties101


@dataclass
class ReferenceType5(CommitConsistency):
    pass


@dataclass
class Metadata14(Metadata13):
    pass


@dataclass
class Properties102:
    name: Name5
    hash: Hash24
    metadata: Metadata14


@dataclass
class Discriminator10(Discriminator9):
    pass


@dataclass
class ReferenceV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties102
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator10


@dataclass
class Metadata15(Metadata13):
    pass


@dataclass
class Properties103:
    name: Name5
    hash: Hash24
    metadata: Metadata15


@dataclass
class Discriminator11(Discriminator9):
    pass


@dataclass
class ReferenceV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties103
    one_of: Sequence[OneOfItem]
    discriminator: Discriminator11


@dataclass
class References(Metadata11):
    pass


@dataclass
class Properties104:
    has_more: HasMore
    token: Token
    references: References


@dataclass
class ReferencesResponseV1:
    required: Sequence[str]
    type: str
    properties: Properties104


@dataclass
class References1(Metadata11):
    pass


@dataclass
class Properties105:
    has_more: HasMore
    token: Token
    references: References1


@dataclass
class ReferencesResponseV2:
    required: Sequence[str]
    type: str
    properties: Properties105


@dataclass
class AnyOfItem4(Schema):
    pass


@dataclass
class Mapping10(MappingModel):
    pass


@dataclass
class Discriminator12:
    property_name: str
    mapping: Mapping10


@dataclass
class RepositoryConfig:
    title: str
    type: str
    any_of: Sequence[AnyOfItem4]
    discriminator: Discriminator12


@dataclass
class Configs1:
    title: str
    description: str
    type: str
    items: Items54


@dataclass
class Properties106:
    configs: Configs1


@dataclass
class RepositoryConfigResponse:
    title: str
    type: str
    properties: Properties106


@dataclass
class Configs2(Configs1):
    pass


@dataclass
class Properties107:
    configs: Configs2


@dataclass
class RepositoryConfigResponseV2:
    title: str
    description: str
    type: str
    properties: Properties107


@dataclass
class RepositoryConfigType(DryRun1):
    pass


@dataclass
class Discriminator13(Discriminator12):
    pass


@dataclass
class RepositoryConfigV2:
    title: str
    description: str
    type: str
    any_of: Sequence[AnyOfItem4]
    discriminator: Discriminator13


@dataclass
class Properties108:
    reference: Reference1


@dataclass
class SingleReferenceResponse4:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties108


@dataclass
class Properties109(Properties108):
    pass


@dataclass
class SingleReferenceResponseV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties109


@dataclass
class Metadata16(Schema):
    pass


@dataclass
class Properties110:
    name: Name5
    metadata: Metadata16
    hash: Hash24


@dataclass
class Tag1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties110


@dataclass
class Properties111(Properties110):
    pass


@dataclass
class TagV1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties111


@dataclass
class Properties112(Properties110):
    pass


@dataclass
class TagV2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties112


@dataclass
class FromRefName2(Name):
    pass


@dataclass
class Items63(Schema1):
    pass


@dataclass
class HashesToTransplant:
    min_items: int
    unique_items: bool
    type: str
    items: Items63


@dataclass
class Items64(Schema):
    pass


@dataclass
class KeyMergeModes2:
    type: str
    items: Items64


@dataclass
class DefaultKeyMergeMode2(Schema):
    pass


@dataclass
class DryRun2(Schema1):
    pass


@dataclass
class FetchAdditionalInfo2(Schema1):
    pass


@dataclass
class ReturnConflictAsResult2(Schema1):
    pass


@dataclass
class Properties113:
    from_ref_name: FromRefName2
    hashes_to_transplant: HashesToTransplant
    key_merge_modes: KeyMergeModes2
    default_key_merge_mode: DefaultKeyMergeMode2
    dry_run: DryRun2
    fetch_additional_info: FetchAdditionalInfo2
    return_conflict_as_result: ReturnConflictAsResult2


@dataclass
class Transplant2:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties113


@dataclass
class Message4:
    description: str
    min_length: int
    type: str


@dataclass
class Items65(Schema1):
    pass


@dataclass
class HashesToTransplant1:
    description: str
    min_items: int
    unique_items: bool
    type: str
    items: Items65


@dataclass
class FromRefName3(DefaultCutoffPolicy):
    pass


@dataclass
class Items66(Schema):
    pass


@dataclass
class KeyMergeModes3:
    description: str
    type: str
    items: Items66


@dataclass
class DefaultKeyMergeMode3(DefaultKeyMergeMode1):
    pass


@dataclass
class DryRun3(DryRun1):
    pass


@dataclass
class FetchAdditionalInfo3(DryRun1):
    pass


@dataclass
class ReturnConflictAsResult3(DryRun1):
    pass


@dataclass
class Properties114:
    message: Message4
    hashes_to_transplant: HashesToTransplant1
    from_ref_name: FromRefName3
    key_merge_modes: KeyMergeModes3
    default_key_merge_mode: DefaultKeyMergeMode3
    dry_run: DryRun3
    fetch_additional_info: FetchAdditionalInfo3
    return_conflict_as_result: ReturnConflictAsResult3


@dataclass
class Transplant1:
    title: str
    required: Sequence[str]
    type: str
    properties: Properties114


@dataclass
class Type2(DryRun1):
    pass


@dataclass
class Properties115:
    id: Id
    sql_text: SqlText
    dialect: Dialect


@dataclass
class Udf:
    required: Sequence[str]
    type: str
    properties: Properties115


@dataclass
class Properties116(Properties115):
    pass


@dataclass
class UdfV1:
    required: Sequence[str]
    type: str
    properties: Properties116


@dataclass
class Properties117(Properties115):
    pass


@dataclass
class UdfV2:
    required: Sequence[str]
    type: str
    properties: Properties117


@dataclass
class Properties118(Properties2):
    pass


@dataclass
class Unchanged:
    required: Sequence[str]
    type: str
    properties: Properties118


@dataclass
class Properties119(Properties2):
    pass


@dataclass
class UnchangedV1:
    required: Sequence[str]
    type: str
    properties: Properties119


@dataclass
class Properties120(Properties2):
    pass


@dataclass
class UnchangedV2:
    required: Sequence[str]
    type: str
    properties: Properties120


@dataclass
class Config(Schema):
    pass


@dataclass
class Properties121:
    config: Config


@dataclass
class UpdateRepositoryConfigRequest:
    title: str
    type: str
    properties: Properties121


@dataclass
class Discriminator14(Discriminator12):
    pass


@dataclass
class Previous3:
    title: str
    description: str
    type: str
    any_of: Sequence[AnyOfItem4]
    discriminator: Discriminator14


@dataclass
class Properties122:
    previous: Previous3


@dataclass
class UpdateRepositoryConfigResponse:
    title: str
    type: str
    properties: Properties122


@dataclass
class Discriminator15(Discriminator12):
    pass


@dataclass
class Previous4:
    title: str
    description: str
    type: str
    any_of: Sequence[AnyOfItem4]
    discriminator: Discriminator15


@dataclass
class Properties123:
    previous: Previous4


@dataclass
class UpdateRepositoryConfigResponseV2:
    title: str
    description: str
    type: str
    properties: Properties123


@dataclass
class Schemas:
    added_content: AddedContent
    added_content_v2: AddedContentV2
    branch: Branch
    branch_v1: BranchV1
    branch_v2: BranchV2
    commit_consistency: CommitConsistency
    commit_consistency_v2: CommitConsistencyV2
    commit_meta: CommitMeta
    commit_meta_v1: CommitMetaV1
    commit_meta_v2: CommitMetaV2
    commit_response: CommitResponse1
    commit_response_v2: CommitResponseV2
    conflict: Conflict
    conflict_v2: ConflictV2
    content: Content50
    content_key: ContentKey
    content_key_details: ContentKeyDetails
    content_key_details_v1: ContentKeyDetailsV1
    content_key_details_v2: ContentKeyDetailsV2
    content_key_v1: ContentKeyV1
    content_key_v2: ContentKeyV2
    content_metadata: ContentMetadata
    content_metadata_v2: ContentMetadataV2
    content_response_v2: ContentResponseV2
    content_with_key: ContentWithKey
    content_with_key_v1: ContentWithKeyV1
    content_with_key_v2: ContentWithKeyV2
    content_v1: ContentV1
    content_v2: ContentV2
    delete: Delete3
    delete_v1: DeleteV1
    delete_v2: DeleteV2
    delta_lake_table: DeltaLakeTable
    delta_lake_table_v1: DeltaLakeTableV1
    delta_lake_table_v2: DeltaLakeTableV2
    detached: Detached
    detached_v1: DetachedV1
    detached_v2: DetachedV2
    diff_entry: DiffEntry
    diff_entry_v1: DiffEntryV1
    diff_entry_v2: DiffEntryV2
    diff_response: DiffResponse1
    diff_response_v1: DiffResponseV1
    diff_response_v2: DiffResponseV2
    documentation: Documentation3
    documentation_v2: DocumentationV2
    entries_response_v1: EntriesResponseV1
    entries_response_v2: EntriesResponseV21
    entry_v1: EntryV1
    entry_v2: EntryV2
    fetch_option: FetchOption
    garbage_collector_config: GarbageCollectorConfig
    garbage_collector_config_v2: GarbageCollectorConfigV2
    get_multiple_contents_request: GetMultipleContentsRequest
    get_multiple_contents_response: GetMultipleContentsResponse
    get_multiple_contents_response_v1: GetMultipleContentsResponseV1
    get_multiple_contents_response_v2: GetMultipleContentsResponseV2
    get_namespaces_response_v1: GetNamespacesResponseV1
    iceberg_table: IcebergTable
    iceberg_table_v1: IcebergTableV1
    iceberg_table_v2: IcebergTableV2
    iceberg_view: IcebergView
    iceberg_view_v1: IcebergViewV1
    iceberg_view_v2: IcebergViewV2
    log_entry: LogEntry
    log_entry_v1: LogEntryV1
    log_entry_v2: LogEntryV2
    log_response: LogResponse
    log_response_v1: LogResponseV1
    log_response_v2: LogResponseV2
    merge: Merge2
    merge1: Merge1
    merge_behavior: MergeBehavior3
    merge_behavior_v1: MergeBehaviorV1
    merge_behavior_v2: MergeBehaviorV2
    merge_key_behavior: MergeKeyBehavior
    merge_response: MergeResponse
    merge_response_v1: MergeResponseV1
    merge_response_v2: MergeResponseV2
    namespace: Namespace2
    namespace_update: NamespaceUpdate1
    namespace_v1: NamespaceV1
    namespace_v2: NamespaceV2
    nessie_configuration: NessieConfiguration
    nessie_configuration_v1: NessieConfigurationV1
    nessie_configuration_v2: NessieConfigurationV2
    operation: Operation
    operation_v1: OperationV1
    operation_v2: OperationV2
    operations: Operations5
    put: Put3
    put_v1: PutV1
    put_v2: PutV2
    reference: Reference
    reference_cutoff_policy: ReferenceCutoffPolicy
    reference_cutoff_policy_v2: ReferenceCutoffPolicyV2
    reference_history_response: ReferenceHistoryResponse1
    reference_history_response_v2: ReferenceHistoryResponseV2
    reference_history_state: ReferenceHistoryState
    reference_history_state_v2: ReferenceHistoryStateV2
    reference_metadata: ReferenceMetadata
    reference_metadata_v1: ReferenceMetadataV1
    reference_metadata_v2: ReferenceMetadataV2
    reference_type: ReferenceType5
    reference_v1: ReferenceV1
    reference_v2: ReferenceV2
    references_response_v1: ReferencesResponseV1
    references_response_v2: ReferencesResponseV2
    repository_config: RepositoryConfig
    repository_config_response: RepositoryConfigResponse
    repository_config_response_v2: RepositoryConfigResponseV2
    repository_config_type: RepositoryConfigType
    repository_config_v2: RepositoryConfigV2
    single_reference_response: SingleReferenceResponse4
    single_reference_response_v2: SingleReferenceResponseV2
    tag: Tag1
    tag_v1: TagV1
    tag_v2: TagV2
    transplant: Transplant2
    transplant1: Transplant1
    type: Type2
    udf: Udf
    udf_v1: UdfV1
    udf_v2: UdfV2
    unchanged: Unchanged
    unchanged_v1: UnchangedV1
    unchanged_v2: UnchangedV2
    update_repository_config_request: UpdateRepositoryConfigRequest
    update_repository_config_response: UpdateRepositoryConfigResponse
    update_repository_config_response_v2: UpdateRepositoryConfigResponseV2


@dataclass
class Value:
    default_branch: str
    max_supported_api_version: int


@dataclass
class NessieConfigV11:
    value: Value


@dataclass
class Value1:
    default_branch: str
    min_supported_api_version: int
    max_supported_api_version: int
    spec_version: str


@dataclass
class NessieConfig1:
    value: Value1


@dataclass
class Namespace3:
    value: str


@dataclass
class Ref24(Namespace3):
    pass


@dataclass
class RefWithHash11(Namespace3):
    pass


@dataclass
class RefWithTimestampMillisSinceEpoch6(Namespace3):
    pass


@dataclass
class RefWithTimestampInstant6(Namespace3):
    pass


@dataclass
class RefWithNthPredecessor6(Namespace3):
    pass


@dataclass
class RefWithMergeParent6(Namespace3):
    pass


@dataclass
class RefDefault8(Namespace3):
    pass


@dataclass
class RefDetached6(Namespace3):
    pass


@dataclass
class RefForDiffWithHash1(Namespace3):
    pass


@dataclass
class ReferenceType6(Namespace3):
    pass


@dataclass
class Hash30(Namespace3):
    pass


@dataclass
class Value2:
    type: str
    hash: str
    name: str


@dataclass
class RefObj5:
    value: Value2


@dataclass
class RefObjNew3(RefObj5):
    pass


@dataclass
class TagObj2(RefObj5):
    pass


@dataclass
class ContentKeyGet3(Namespace3):
    pass


@dataclass
class Value5:
    elements: Sequence[str]


@dataclass
class ContentKey1:
    value: Value5


@dataclass
class NamespaceName5(Namespace3):
    pass


@dataclass
class Namespace4:
    type: str
    elements: Sequence[str]


@dataclass
class Value6:
    namespaces: Sequence[Namespace4]


@dataclass
class NamespacesResponse1:
    value: Value6


@dataclass
class PropertyUpdates1:
    key1: str
    key2: str


@dataclass
class Value7:
    property_updates: PropertyUpdates1
    property_removals: Sequence[str]


@dataclass
class NamespaceUpdate2:
    value: Value7


@dataclass
class Value8:
    type: str
    id: str
    metadata_location: str
    snapshot_id: int
    schema_id: int
    spec_id: int
    sort_order_id: int


@dataclass
class Iceberg1:
    value: Value8


@dataclass
class ExprByNamespace2(Namespace3):
    pass


@dataclass
class ExprByContentType2(Namespace3):
    pass


@dataclass
class ExprByNamespaceAndContentType2(Namespace3):
    pass


@dataclass
class ExprByCommitAuthor2(Namespace3):
    pass


@dataclass
class ExprByCommitCommitter2(Namespace3):
    pass


@dataclass
class ExprByCommitTime2(Namespace3):
    pass


@dataclass
class ExprByCommitOperationsInNamespace(Namespace3):
    pass


@dataclass
class ExprByCommitOperationsTableName2(Namespace3):
    pass


@dataclass
class ExprByCommitOperationsType2(Namespace3):
    pass


@dataclass
class ExprByRefType2(Namespace3):
    pass


@dataclass
class ExprByRefName2(Namespace3):
    pass


@dataclass
class ExprByRefCommit2(Namespace3):
    pass


@dataclass
class CommitMessage1(Namespace3):
    pass


@dataclass
class Content60(Value8):
    pass


@dataclass
class Key24(Value5):
    pass


@dataclass
class Content59:
    content: Content60
    key: Key24


@dataclass
class Value9:
    contents: Sequence[Content59]


@dataclass
class MultiGetResponse1:
    value: Value9


@dataclass
class RequestedKey(Value5):
    pass


@dataclass
class Value10:
    requested_keys: Sequence[RequestedKey]


@dataclass
class MultiGetRequest2:
    value: Value10


@dataclass
class Name11(Value5):
    pass


@dataclass
class Entry:
    name: Name11
    type: str


@dataclass
class Value11:
    has_more: bool
    entries: Sequence[Entry]


@dataclass
class EntriesResponse1:
    value: Value11


@dataclass
class EffectiveReference4(Value2):
    pass


@dataclass
class Content61(Value8):
    pass


@dataclass
class Entry1:
    name: Name11
    type: str
    content_id: str
    content: Content61


@dataclass
class Value12:
    token: str
    has_more: bool
    effective_reference: EffectiveReference4
    entries: Sequence[Entry1]


@dataclass
class EntriesResponseV22:
    value: Value12


@dataclass
class Types:
    value: Sequence[str]


@dataclass
class KeyMergeMode:
    key: Key24
    merge_behavior: str


@dataclass
class Value13:
    from_hash: str
    from_ref_name: str
    default_key_merge_mode: str
    key_merge_modes: Sequence[KeyMergeMode]
    dry_run: bool
    fetch_additional_info: bool
    return_conflict_as_result: bool


@dataclass
class Merge3:
    value: Value13


@dataclass
class KeyMergeMode1(KeyMergeMode):
    pass


@dataclass
class Value14:
    hashes_to_transplant: Sequence[str]
    from_ref_name: str
    default_key_merge_mode: str
    key_merge_modes: Sequence[KeyMergeMode1]
    dry_run: bool
    fetch_additional_info: bool
    return_conflict_as_result: bool


@dataclass
class Transplant3:
    value: Value14


@dataclass
class Detail:
    key: Key24
    merge_behavior: str
    conflict_type: str


@dataclass
class Value15:
    was_applied: bool
    was_successful: bool
    resultant_target_hash: str
    common_ancestor: str
    target_branch: str
    effective_target_hash: str
    expected_hash: str
    details: Sequence[Detail]


@dataclass
class MergeResponseSuccess4:
    value: Value15


@dataclass
class Detail1(Detail):
    pass


@dataclass
class Value16:
    was_applied: bool
    was_successful: bool
    resultant_target_hash: str
    common_ancestor: str
    target_branch: str
    effective_target_hash: str
    expected_hash: str
    details: Sequence[Detail1]


@dataclass
class MergeResponseFail4:
    value: Value16


@dataclass
class Properties124:
    additional_prop1: str
    additional_prop2: str
    additional_prop3: str


@dataclass
class CommitMeta6:
    author: str
    author_time: str
    message: str
    properties: Properties124
    signed_off_by: str


@dataclass
class Content62:
    type: str
    metadata_location: str
    snapshot_id: int
    schema_id: int
    spec_id: int
    sort_order_id: int


@dataclass
class Operation1:
    type: str
    key: Key24
    content: Content62


@dataclass
class Value17:
    commit_meta: CommitMeta6
    operations: Sequence[Operation1]


@dataclass
class Operations7:
    value: Value17


@dataclass
class CommitMeta7:
    author: str
    author_time: str
    commit_time: str
    committer: str
    hash: str
    message: str
    properties: Properties124
    signed_off_by: str


@dataclass
class Content63(Value8):
    pass


@dataclass
class Operation2:
    type: str
    key: Key24
    content: Content63 | None = None


@dataclass
class LogEntry1:
    commit_meta: CommitMeta7
    parent_commit_hash: str
    operations: Sequence[Operation2]


@dataclass
class Value18:
    token: str
    has_more: bool
    log_entries: Sequence[LogEntry1]


@dataclass
class LogResponseAdditionalInfo2:
    value: Value18


@dataclass
class CommitMeta8(CommitMeta7):
    pass


@dataclass
class LogEntry2:
    commit_meta: CommitMeta8


@dataclass
class Value19:
    token: str
    has_more: bool
    log_entries: Sequence[LogEntry2]


@dataclass
class LogResponseSimple2:
    value: Value19


@dataclass
class Content64:
    content: Content63
    key: Key24


@dataclass
class Value20:
    contents: Sequence[Content64]
    effective_reference: EffectiveReference4


@dataclass
class MultipleContentsResponse2:
    value: Value20


@dataclass
class TargetBranch5(Value2):
    pass


@dataclass
class AddedContent1:
    content_id: str
    key: Key24


@dataclass
class Value21:
    target_branch: TargetBranch5
    added_contents: Sequence[AddedContent1]


@dataclass
class CommitResponse2:
    value: Value21


@dataclass
class Content66(Value8):
    pass


@dataclass
class Value22:
    content: Content66
    effective_reference: EffectiveReference4


@dataclass
class ContentResponseIceberg1:
    value: Value22


@dataclass
class Reference5(Value2):
    pass


@dataclass
class Value23:
    reference: Reference5


@dataclass
class SingleReferenceResponse5:
    value: Value23


@dataclass
class CommitMetaOfHead3:
    hash: str
    committer: str
    author: str
    message: str
    commit_time: str
    author_time: str
    properties: Mapping[str, Any]


@dataclass
class Metadata19:
    commit_meta_of_head: CommitMetaOfHead3


@dataclass
class Reference6:
    type: str
    hash: str
    name: str
    metadata: Metadata19


@dataclass
class Value24:
    reference: Reference6


@dataclass
class SingleReferenceResponseWithMetadata1:
    value: Value24


@dataclass
class Reference7(Value2):
    pass


@dataclass
class Value25:
    has_more: bool
    references: Sequence[Reference7]


@dataclass
class ReferencesResponse2:
    value: Value25


@dataclass
class Meta2(CommitMetaOfHead3):
    pass


@dataclass
class Current2:
    pointer: str
    commit_consistency: str
    meta: Meta2


@dataclass
class Previou(Current2):
    pass


@dataclass
class Value26:
    reference: Reference7
    current: Current2
    previous: Sequence[Previou]
    commit_log_consistency: str


@dataclass
class ReferenceHistoryResponse2:
    value: Value26


@dataclass
class Metadata20:
    commit_meta_of_head: CommitMetaOfHead3 | None = None
    num_commits_ahead: int | None = None
    num_commits_behind: int | None = None
    common_ancestor_hash: str | None = None
    num_total_commits: int | None = None


@dataclass
class Reference9:
    type: str
    hash: str
    name: str
    metadata: Metadata20


@dataclass
class Value27:
    has_more: bool
    references: Sequence[Reference9]


@dataclass
class ReferencesResponseWithMetadata2:
    value: Value27


@dataclass
class From3(Value8):
    pass


@dataclass
class To3(Value8):
    pass


@dataclass
class Diff:
    key: Key24
    from_: From3
    to: To3


@dataclass
class Value28:
    diffs: Sequence[Diff]


@dataclass
class DiffResponse2:
    value: Value28


@dataclass
class Diff1(Diff):
    pass


@dataclass
class EffectiveFromReference2(Value2):
    pass


@dataclass
class EffectiveToReference2(Value2):
    pass


@dataclass
class Value29:
    has_more: bool
    diffs: Sequence[Diff1]
    effective_from_reference: EffectiveFromReference2
    effective_to_reference: EffectiveToReference2


@dataclass
class DiffResponseWithRef1:
    value: Value29


@dataclass
class Examples77:
    nessie_config_v1: NessieConfigV11
    nessie_config: NessieConfig1
    namespace: Namespace3
    ref: Ref24
    ref_with_hash: RefWithHash11
    ref_with_timestamp_millis_since_epoch: RefWithTimestampMillisSinceEpoch6
    ref_with_timestamp_instant: RefWithTimestampInstant6
    ref_with_nth_predecessor: RefWithNthPredecessor6
    ref_with_merge_parent: RefWithMergeParent6
    ref_default: RefDefault8
    ref_detached: RefDetached6
    ref_for_diff_with_hash: RefForDiffWithHash1
    reference_type: ReferenceType6
    hash: Hash30
    null_hash: Mapping[str, Any]
    ref_obj: RefObj5
    ref_obj_new: RefObjNew3
    tag_obj: TagObj2
    content_key_get: ContentKeyGet3
    content_key: ContentKey1
    namespace_name: NamespaceName5
    empty_namespace_name: Mapping[str, Any]
    namespaces_response: NamespacesResponse1
    namespace_update: NamespaceUpdate2
    iceberg: Iceberg1
    expr_by_namespace: ExprByNamespace2
    expr_by_content_type: ExprByContentType2
    expr_by_namespace_and_content_type: ExprByNamespaceAndContentType2
    expr_by_commit_author: ExprByCommitAuthor2
    expr_by_commit_committer: ExprByCommitCommitter2
    expr_by_commit_time: ExprByCommitTime2
    expr_by_commit_operations_in_namespace: ExprByCommitOperationsInNamespace
    expr_by_commit_operations_table_name: ExprByCommitOperationsTableName2
    expr_by_commit_operations_type: ExprByCommitOperationsType2
    expr_by_ref_type: ExprByRefType2
    expr_by_ref_name: ExprByRefName2
    expr_by_ref_commit: ExprByRefCommit2
    commit_message: CommitMessage1
    multi_get_response: MultiGetResponse1
    multi_get_request: MultiGetRequest2
    entries_response: EntriesResponse1
    entries_response_v2: EntriesResponseV22
    types: Types
    merge: Merge3
    transplant: Transplant3
    merge_response_success: MergeResponseSuccess4
    merge_response_fail: MergeResponseFail4
    operations: Operations7
    log_response_additional_info: LogResponseAdditionalInfo2
    log_response_simple: LogResponseSimple2
    multiple_contents_response: MultipleContentsResponse2
    commit_response: CommitResponse2
    content_response_iceberg: ContentResponseIceberg1
    single_reference_response: SingleReferenceResponse5
    single_reference_response_with_metadata: SingleReferenceResponseWithMetadata1
    references_response: ReferencesResponse2
    reference_history_response: ReferenceHistoryResponse2
    references_response_with_metadata: ReferencesResponseWithMetadata2
    diff_response: DiffResponse2
    diff_response_with_ref: DiffResponseWithRef1


@dataclass
class Components:
    schemas: Schemas
    examples: Examples77


@dataclass
class NessieModel:
    openapi: str
    info: Info
    servers: Sequence[Server]
    tags: Sequence[Tag]
    paths: Paths
    components: Components
